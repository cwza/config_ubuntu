{
    "Modulo Helper": {
        "prefix": "modulo",
        "body": [
            "const ll modN = 1e9+7;",
            "",
            "long long fpow(long long a, long long b, long long modN) {",
            "    long long res = 1;",
            "    while(b) {",
            "        if(b%2) res = res*a%modN;",
            "        a = a*a%modN;",
            "        b /= 2;",
            "    }",
            "    return res;",
            "}",
            "",
            "long long modinv(long long a, long long p) {",
            "    return fpow(a, p-2, p);",
            "}",
            "",
            "struct Modulo {",
            "    ll val;",
            "    Modulo(ll _val): val(_val){",
            "        val %= modN;",
            "    }",
            "    Modulo& operator+=(Modulo rhs) {",
            "        val += rhs.val;",
            "        val %= modN;",
            "        return *this;",
            "    }",
            "    Modulo& operator-=(Modulo rhs) {",
            "        val -= rhs.val;",
            "        while(val<0) val += modN;",
            "        return *this;",
            "    }",
            "    Modulo& operator*=(Modulo rhs) {",
            "        val *= rhs.val;",
            "        val %= modN;",
            "        return *this;",
            "    }",
            "    Modulo& operator/=(Modulo rhs) {",
            "        val = val*modinv(rhs.val, modN);",
            "        val %= modN;",
            "        return *this;",
            "    }",
            "    friend Modulo operator+(Modulo lhs, Modulo rhs) {",
            "        lhs += rhs;",
            "        return lhs;",
            "    }",
            "    friend Modulo operator-(Modulo lhs, Modulo rhs) {",
            "        lhs -= rhs;",
            "        return lhs;",
            "    }",
            "    friend Modulo operator*(Modulo lhs, Modulo rhs) {",
            "        lhs *= rhs;",
            "        return lhs;",
            "    }",
            "    friend Modulo operator/(Modulo lhs, Modulo rhs) {",
            "        lhs /= rhs;",
            "        return lhs;",
            "    }",
            "    friend ostream& operator<<(ostream& os, Modulo& modll) {",
            "        os << modll.val;",
            "        return os;",
            "    }",
            "};",
            ""
        ],
        "description": "Modulo Helper"
    }
}
